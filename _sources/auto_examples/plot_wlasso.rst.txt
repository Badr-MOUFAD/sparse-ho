.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_wlasso.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_wlasso.py:


=====================================
Weighted Lasso with held-out test set
=====================================

This example shows how to perform hyperparameter optimization
for a weighted Lasso using a held-out validation set.
In particular we compare the weighted Lasso to LassoCV on a toy example


.. code-block:: default


    # Authors: Quentin Bertrand <quentin.bertrand@inria.fr>
    #          Quentin Klopfenstein <quentin.klopfenstein@u-bourgogne.fr>
    #          Kenan Sehic
    # License: BSD (3-clause)

    import numpy as np
    import matplotlib.pyplot as plt
    import pandas as pd
    from numpy.linalg import norm

    from celer import Lasso, LassoCV
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import mean_squared_error
    from sklearn.utils import check_random_state
    from scipy.linalg import toeplitz

    from sparse_ho.models import WeightedLasso
    from sparse_ho.criterion import HeldOutMSE
    from sparse_ho.implicit_forward import ImplicitForward
    from sparse_ho.utils import Monitor
    from sparse_ho.ho import grad_search








Dataset creation


.. code-block:: default

    n_samples = 900
    n_features = 600
    rng = check_random_state(0)
    X = rng.multivariate_normal(
        size=n_samples, mean=np.zeros(n_features),
        cov=toeplitz(0.5 ** np.arange(n_features)))


    # Create true regression coefficients of 5 non-zero values
    w_true = np.zeros(n_features)
    size_supp = 5
    idx = rng.choice(X.shape[1], size_supp, replace=False)
    w_true[idx] = (-1) ** np.arange(size_supp)
    noise = rng.randn(n_samples)
    y = X @ w_true
    y += noise / norm(noise) * 0.5 * norm(y)








.. code-block:: default

    X, X_test, y, y_test = train_test_split(X, y, test_size=0.333)

    n_samples = X.shape[0]
    idx_train = np.arange(0, n_samples // 2)
    idx_val = np.arange(n_samples // 2, n_samples)







Max penalty value


.. code-block:: default

    alpha_max = np.max(np.abs(X[idx_train, :].T.dot(y[idx_train]))) / len(idx_train)
    n_alphas = 30
    alphas = alpha_max * np.geomspace(1, 0.001, n_alphas)







Vanilla LassoCV


.. code-block:: default

    print("========== Celer's LassoCV started ===============")
    model_cv = LassoCV(
        verbose=False, fit_intercept=False, alphas=alphas, tol=1e-7, max_iter=100,
        cv=2, n_jobs=2).fit(X, y)

    # Measure mse on test
    mse_cv = mean_squared_error(y_test, model_cv.predict(X_test))
    print("Vanilla LassoCV: Mean-squared error on test data %f" % mse_cv)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ========== Celer's LassoCV started ===============
    Vanilla LassoCV: Mean-squared error on test data 1.310802




Weighted Lasso with sparse-ho.
We use the vanilla lassoCV coefficients as a starting point


.. code-block:: default

    log_alpha0 = np.log(model_cv.alpha_) * np.ones(n_features)
    # Weighted Lasso: Sparse-ho: 1 param per feature
    estimator = Lasso(fit_intercept=False, max_iter=10, warm_start=True)
    model = WeightedLasso(estimator=estimator)
    criterion = HeldOutMSE(idx_train, idx_val)
    algo = ImplicitForward()
    monitor = Monitor()
    grad_search(
        algo, criterion, model, X, y, log_alpha0, monitor, n_outer=20, tol=1e-6)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    !!step size rejected!! 2.0323346850761577 1.3386987090449731

    (array([-2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -9.91149537e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -8.61123655e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  5.86742377e-02,
           -1.47473153e-01,  2.18457012e-01, -3.78130260e+00, -2.16352757e+00,
           -6.76976451e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -1.72946045e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -1.89254572e+00,  2.18457012e-01,
            2.18457012e-01,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -5.37076609e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -5.98953721e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -3.16965698e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -3.88772520e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -6.00125574e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -1.20000000e+01,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -1.86146411e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -1.37388129e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -1.19978616e+01, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -1.70853879e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -7.57386150e+00, -2.07496095e+00,
           -2.16352757e+00,  2.18457012e-01, -8.88837649e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -3.22827617e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -7.14266527e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -1.96701240e+00, -2.16352757e+00,
            2.18457012e-01,  2.18457012e-01, -2.16352757e+00, -5.93960439e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -1.74398784e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -1.10325467e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.45288336e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -1.19961355e+01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -9.63964845e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -1.03459633e+01, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -1.87519316e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -1.87779862e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -1.77505391e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  1.75653852e-01,
            2.18457012e-01,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -1.02478219e+01, -3.19522913e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -1.19941691e+01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -6.21235012e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,  2.18457012e-01,
            1.75436670e-02,  2.18457012e-01,  2.18457012e-01,  2.18457012e-01,
           -4.74446490e-01, -3.70263414e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -3.92600793e-01,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            2.18457012e-01, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
            1.89959195e-01,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -1.68972608e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -1.19967930e+01,
           -2.16352757e+00,  1.11996247e-03, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,
           -2.16352757e+00, -8.95060956e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -3.80211058e+00, -2.16352757e+00,  1.72969744e-01, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.41214033e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.59105422e+00, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00,  2.18457012e-01,
           -2.16352757e+00, -9.77083295e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00,  2.18457012e-01, -2.16352757e+00, -2.16352757e+00,
           -2.16352757e+00, -2.16352757e+00, -8.59185230e+00, -2.16352757e+00]), 2.018208872256306, array([ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, -1.86432438e-06,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -8.27341342e-05,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  1.48778373e-03,  0.00000000e+00,
           -2.06618239e-04,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  1.38258504e-02,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  1.08522613e-04,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  9.55444356e-05,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  9.05351579e-07,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
           -4.92295593e-07,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -6.27028150e-05,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -5.03214682e-05,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -4.99326211e-03,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -4.14302220e-03,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00, -1.72576406e-04,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00, -2.96967312e-03,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00, -6.43901092e-07,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  3.91331225e-07,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00, -2.12286869e-05,  9.28302298e-04,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00, -1.21692029e-06,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  2.29833968e-05,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00, -1.95172942e-03,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00, -2.63587712e-07,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  4.63988442e-06,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            4.86836669e-03,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00, -1.68464684e-03,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
            0.00000000e+00,  0.00000000e+00,  2.71189393e-02,  0.00000000e+00]))



MSE on validation set


.. code-block:: default

    mse_sho_val = mean_squared_error(y[idx_val], estimator.predict(X[idx_val, :]))

    # MSE on test set, ie unseen data
    mse_sho_test = mean_squared_error(y_test, estimator.predict(X_test))


    print("Sparse-ho: Mean-squared error on validation data %f" % mse_sho_val)
    print("Sparse-ho: Mean-squared error on test (unseen) data %f" % mse_sho_test)


    labels = ['WeightedLasso val', 'WeightedLasso test', 'Lasso CV']

    df = pd.DataFrame(
        np.array([mse_sho_val, mse_sho_test, mse_cv]).reshape((1, -1)),
        columns=labels)
    df.plot.bar(rot=0)
    plt.xlabel("Estimator")
    plt.ylabel("Mean square error")
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/images/sphx_glr_plot_wlasso_001.png
    :alt: plot wlasso
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Sparse-ho: Mean-squared error on validation data 2.018209
    Sparse-ho: Mean-squared error on test (unseen) data 2.691906





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.222 seconds)


.. _sphx_glr_download_auto_examples_plot_wlasso.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_wlasso.py <plot_wlasso.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_wlasso.ipynb <plot_wlasso.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
