
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_held_out_lasso.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_held_out_lasso.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_held_out_lasso.py:


============================
Lasso with held-out test set
============================

This example shows how to perform hyperparameter optimization
for a Lasso using a held-out validation set.

.. GENERATED FROM PYTHON SOURCE LINES 10-60

.. code-block:: default


    # Authors: Quentin Bertrand <quentin.bertrand@inria.fr>
    #          Quentin Klopfenstein <quentin.klopfenstein@u-bourgogne.fr>
    #          Mathurin Massias
    #
    # License: BSD (3-clause)

    import time
    import celer
    import numpy as np
    import seaborn as sns
    import matplotlib.pyplot as plt
    from celer.datasets import make_correlated_data
    from libsvmdata.datasets import fetch_libsvm

    from sparse_ho.models import Lasso
    from sparse_ho.criterion import HeldOutMSE
    from sparse_ho import ImplicitForward
    from sparse_ho.utils import Monitor
    from sparse_ho.utils_plot import discrete_cmap
    from sparse_ho.ho import grad_search
    from sparse_ho.grid_search import grid_search
    from sparse_ho.optimizers import LineSearch


    print(__doc__)

    dataset = 'rcv1'
    # dataset = 'simu'

    if dataset == 'rcv1':
        X, y = fetch_libsvm('rcv1_train')
    else:
        X, y, _ = make_correlated_data(n_samples=1000, n_features=2000,
                                       random_state=0)

    n_samples = X.shape[0]
    idx_train = np.arange(0, n_samples // 2)
    idx_val = np.arange(n_samples // 2, n_samples)

    print("Starting path computation...")
    n_samples = len(y[idx_train])
    alpha_max = np.max(np.abs(X[idx_train, :].T.dot(y[idx_train])))
    alpha_max /= len(idx_train)
    alpha0 = alpha_max / 5

    n_alphas = 10
    alphas = np.geomspace(alpha_max, alpha_max/1_000, n_alphas)
    tol = 1e-7





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/circleci/.local/lib/python3.8/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)

    Dataset: rcv1_train
    Downloading data from https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/binary/rcv1_train.binary.bz2 (13.1 MB)

    file_sizes:   0%|                                   | 0.00/13.7M [00:00<?, ?B/s]    file_sizes:   0%|                           | 24.6k/13.7M [00:00<02:09, 106kB/s]    file_sizes:   0%|                           | 49.2k/13.7M [00:00<02:09, 106kB/s]    file_sizes:   1%|2                           | 106k/13.7M [00:00<01:19, 171kB/s]    file_sizes:   2%|4                           | 221k/13.7M [00:00<00:45, 299kB/s]    file_sizes:   3%|9                           | 451k/13.7M [00:01<00:24, 547kB/s]    file_sizes:   7%|#7                         | 909k/13.7M [00:01<00:12, 1.03MB/s]    file_sizes:  13%|###4                      | 1.83M/13.7M [00:01<00:05, 1.99MB/s]    file_sizes:  27%|######9                   | 3.66M/13.7M [00:01<00:02, 3.85MB/s]    file_sizes:  38%|#########9                | 5.23M/13.7M [00:02<00:01, 4.76MB/s]    file_sizes:  50%|############8             | 6.81M/13.7M [00:02<00:01, 5.38MB/s]    file_sizes:  61%|###############8          | 8.38M/13.7M [00:02<00:00, 5.80MB/s]    file_sizes:  72%|##################8       | 9.95M/13.7M [00:02<00:00, 6.09MB/s]    file_sizes:  84%|#####################8    | 11.5M/13.7M [00:03<00:00, 6.30MB/s]    file_sizes:  95%|########################8 | 13.1M/13.7M [00:03<00:00, 6.44MB/s]    file_sizes: 100%|##########################| 13.7M/13.7M [00:03<00:00, 4.21MB/s]
    Successfully downloaded file to /home/circleci/data/libsvm/binary/rcv1_train.binary.bz2
    Decompressing...
    Loading svmlight file...
    Starting path computation...




.. GENERATED FROM PYTHON SOURCE LINES 61-63

Grid search with scikit-learn
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 63-81

.. code-block:: default


    estimator = celer.Lasso(fit_intercept=False, warm_start=True)

    print('Grid search started')

    t0 = time.time()
    model = Lasso(estimator=estimator)
    criterion = HeldOutMSE(idx_train, idx_val)
    monitor_grid_sk = Monitor()
    grid_search(
        criterion, model, X, y, None, None, monitor_grid_sk,
        alphas=alphas, tol=tol)
    objs = np.array(monitor_grid_sk.objs)
    t_sk = time.time() - t0

    print('Grid search finished')






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Grid search started
    Iteration 1 / 10
    Iteration 2 / 10
    Iteration 3 / 10
    Iteration 4 / 10
    Iteration 5 / 10
    Iteration 6 / 10
    Iteration 7 / 10
    Iteration 8 / 10
    Iteration 9 / 10
    Iteration 10 / 10
    Grid search finished




.. GENERATED FROM PYTHON SOURCE LINES 82-84

Grad-search with sparse-ho
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 84-100

.. code-block:: default


    print('sparse-ho started')

    t0 = time.time()
    model = Lasso(estimator=estimator)
    criterion = HeldOutMSE(idx_train, idx_val)
    algo = ImplicitForward()
    monitor_grad = Monitor()
    optimizer = LineSearch(n_outer=10, tol=tol)
    grad_search(
        algo, criterion, model, optimizer, X, y, alpha0, monitor_grad)

    t_grad_search = time.time() - t0

    print('sparse-ho finished')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    sparse-ho started
    sparse-ho finished




.. GENERATED FROM PYTHON SOURCE LINES 101-103

Plot results
------------

.. GENERATED FROM PYTHON SOURCE LINES 103-136

.. code-block:: default


    p_alphas_grad = np.array(monitor_grad.alphas) / alpha_max

    objs_grad = np.array(monitor_grad.objs)

    print('sparse-ho finished')
    print(f"Time for grid search: {t_sk:.2f} s")
    print(f"Time for grad search (sparse-ho): {t_grad_search:.2f} s")

    print(f'Minimum outer criterion value with grid search: {objs.min():.5f}')
    print(f'Minimum outer criterion value with grad search: {objs_grad.min():.5f}')


    current_palette = sns.color_palette("colorblind")
    cmap = discrete_cmap(len(objs_grad), 'Greens')


    fig, ax = plt.subplots(1, 1, figsize=(5, 3))
    ax.plot(alphas / alphas[0], objs, color=current_palette[0])
    ax.plot(
        alphas / alphas[0], objs, 'bo', label='0-th order method (grid search)',
        color=current_palette[1])
    ax.scatter(
        p_alphas_grad, objs_grad, label='1-st order method',  marker='X',
        color=cmap(np.linspace(0, 1, len(objs_grad))), s=40, zorder=40)
    ax.set_xlabel(r"$\lambda / \lambda_{\max}$")
    ax.set_ylabel(
        r"$\|y^{\rm{val}} - X^{\rm{val}} \hat \beta^{(\lambda)} \|^2$")
    plt.tick_params(width=5)
    plt.legend()
    ax.set_xscale("log")
    plt.tight_layout()
    plt.show(block=False)



.. image:: /auto_examples/images/sphx_glr_plot_held_out_lasso_001.png
    :alt: plot held out lasso
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    sparse-ho finished
    Time for grid search: 14.47 s
    Time for grad search (sparse-ho): 15.40 s
    Minimum outer criterion value with grid search: 0.21316
    Minimum outer criterion value with grad search: 0.21255
    /home/circleci/project/examples/plot_held_out_lasso.py:122: UserWarning: color is redundantly defined by the 'color' keyword argument and the fmt string "bo" (-> color='b'). The keyword argument will take precedence.
      ax.plot(





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  42.962 seconds)


.. _sphx_glr_download_auto_examples_plot_held_out_lasso.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_held_out_lasso.py <plot_held_out_lasso.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_held_out_lasso.ipynb <plot_held_out_lasso.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
